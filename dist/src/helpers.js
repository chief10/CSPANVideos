"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function formatPersonName(name, withSpace) {
    let split, finalName;
    if (!name || typeof name !== "string") {
        return new Error("Must have a name present or it must be a string!");
    }
    // debugger;
    if (name && !/\s/.test(name)) {
        return name;
    }
    split = name.trim().split(" ");
    // Checking if there is a middle initial;
    if (split.length === 3) {
        split.splice(1, 1);
    }
    // For when we need to handle malformed urls.
    finalName = !withSpace
        ? split.join("").toLowerCase()
        : split.join(" ");
    return finalName;
}
exports.formatPersonName = formatPersonName;
function formatEmbedURL(url) {
    let furl = url.split("/");
    furl.pop();
    furl = furl.join("/");
    return furl;
}
exports.formatEmbedURL = formatEmbedURL;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9oZWxwZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsMEJBQWlDLElBQVksRUFBRSxTQUFtQjtJQUNoRSxJQUFJLEtBQUssRUFBRSxTQUFTLENBQUM7SUFFckIsRUFBRSxDQUFDLENBQUUsQ0FBQyxJQUFJLElBQUksT0FBTyxJQUFJLEtBQUssUUFBUyxDQUFDLENBQUMsQ0FBQztRQUN4QyxNQUFNLENBQUMsSUFBSSxLQUFLLENBQUMsa0RBQWtELENBQUMsQ0FBQztJQUN2RSxDQUFDO0lBQ0QsWUFBWTtJQUNaLEVBQUUsQ0FBQyxDQUFFLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzlCLE1BQU0sQ0FBQyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRUQsS0FBSyxHQUFHLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7SUFFL0IseUNBQXlDO0lBQ3pDLEVBQUUsQ0FBQyxDQUFFLEtBQUssQ0FBQyxNQUFNLEtBQUssQ0FBRSxDQUFDLENBQUMsQ0FBQztRQUN6QixLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUNyQixDQUFDO0lBRUQsNkNBQTZDO0lBQzdDLFNBQVMsR0FBRyxDQUFDLFNBQVM7UUFDcEIsQ0FBQyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsV0FBVyxFQUFFO1FBQzlCLENBQUMsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBCLE1BQU0sQ0FBQyxTQUFTLENBQUM7QUFDbkIsQ0FBQztBQXhCRCw0Q0F3QkM7QUFFRCx3QkFBK0IsR0FBVztJQUN4QyxJQUFJLElBQUksR0FBbUIsR0FBRyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUMxQyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7SUFDWCxJQUFJLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUN0QixNQUFNLENBQUMsSUFBSSxDQUFDO0FBQ2QsQ0FBQztBQUxELHdDQUtDIiwiZmlsZSI6InNyYy9oZWxwZXJzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdFBlcnNvbk5hbWUobmFtZTogc3RyaW5nLCB3aXRoU3BhY2U/OiBib29sZWFuKTogc3RyaW5nfEVycm9yIHtcbiAgbGV0IHNwbGl0LCBmaW5hbE5hbWU7XG4gIFxuICBpZiAoICFuYW1lIHx8IHR5cGVvZiBuYW1lICE9PSBcInN0cmluZ1wiICkge1xuICAgIHJldHVybiBuZXcgRXJyb3IoXCJNdXN0IGhhdmUgYSBuYW1lIHByZXNlbnQgb3IgaXQgbXVzdCBiZSBhIHN0cmluZyFcIik7XG4gIH1cbiAgLy8gZGVidWdnZXI7XG4gIGlmICggbmFtZSAmJiAhL1xccy8udGVzdChuYW1lKSkge1xuICAgIHJldHVybiBuYW1lO1xuICB9XG5cbiAgc3BsaXQgPSBuYW1lLnRyaW0oKS5zcGxpdChcIiBcIik7XG5cbiAgLy8gQ2hlY2tpbmcgaWYgdGhlcmUgaXMgYSBtaWRkbGUgaW5pdGlhbDtcbiAgaWYgKCBzcGxpdC5sZW5ndGggPT09IDMgKSB7XG4gICAgc3BsaXQuc3BsaWNlKDEsIDEpO1xuICB9XG5cbiAgLy8gRm9yIHdoZW4gd2UgbmVlZCB0byBoYW5kbGUgbWFsZm9ybWVkIHVybHMuXG4gIGZpbmFsTmFtZSA9ICF3aXRoU3BhY2UgXG4gICAgPyBzcGxpdC5qb2luKFwiXCIpLnRvTG93ZXJDYXNlKClcbiAgICA6IHNwbGl0LmpvaW4oXCIgXCIpO1xuXG4gIHJldHVybiBmaW5hbE5hbWU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXRFbWJlZFVSTCh1cmw6IHN0cmluZyk6IHN0cmluZyB7XG4gIGxldCBmdXJsOnN0cmluZ3xzdHJpbmdbXSA9IHVybC5zcGxpdChcIi9cIik7XG4gIGZ1cmwucG9wKCk7XG4gIGZ1cmwgPSBmdXJsLmpvaW4oXCIvXCIpO1xuICByZXR1cm4gZnVybDtcbn1cblxuIl19
