{"version":3,"sources":["src/helpers.ts"],"names":[],"mappings":";;AAAA,0BAAiC,IAAY,EAAE,SAAmB;IAChE,IAAI,KAAK,EAAE,SAAS,CAAC;IAErB,EAAE,CAAC,CAAE,CAAC,IAAI,IAAI,OAAO,IAAI,KAAK,QAAS,CAAC,CAAC,CAAC;QACxC,MAAM,CAAC,IAAI,KAAK,CAAC,kDAAkD,CAAC,CAAC;IACvE,CAAC;IAED,KAAK,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAE/B,yCAAyC;IACzC,EAAE,CAAC,CAAE,KAAK,CAAC,MAAM,KAAK,CAAE,CAAC,CAAC,CAAC;QACzB,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACrB,CAAC;IAED,6CAA6C;IAC7C,SAAS,GAAG,CAAC,SAAS;QACpB,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,WAAW,EAAE;QAC9B,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAEpB,MAAM,CAAC,SAAS,CAAC;AACnB,CAAC;AApBD,4CAoBC;AAED,wBAA+B,GAAW;IACxC,IAAI,IAAI,GAAmB,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC1C,IAAI,CAAC,GAAG,EAAE,CAAC;IACX,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACtB,MAAM,CAAC,IAAI,CAAC;AACd,CAAC;AALD,wCAKC","file":"helpers.js","sourcesContent":["export function formatPersonName(name: string, withSpace?: boolean): string|Error {\n  let split, finalName;\n  \n  if ( !name || typeof name !== \"string\" ) {\n    return new Error(\"Must have a name present or it must be a string!\");\n  }\n\n  split = name.trim().split(\" \");\n\n  // Checking if there is a middle initial;\n  if ( split.length === 3 ) {\n    split.splice(1, 1);\n  }\n\n  // For when we need to handle malformed urls.\n  finalName = !withSpace \n    ? split.join(\"\").toLowerCase()\n    : split.join(\" \");\n\n  return finalName;\n}\n\nexport function formatEmbedURL(url: string): string {\n  let furl:string|string[] = url.split(\"/\");\n  furl.pop();\n  furl = furl.join(\"/\");\n  return furl;\n}\n\n"]}