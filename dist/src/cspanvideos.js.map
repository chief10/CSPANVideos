{"version":3,"sources":["src/cspanvideos.ts"],"names":[],"mappings":"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","file":"cspanvideos.js","sourcesContent":["import * as request from 'request';\nimport * as cheerio from 'cheerio';\nimport * as chalk from 'chalk';\nimport * as _ from 'lodash';\n\nconst validUrl = require('valid-url');\n\nimport { formatPersonName, formatEmbedURL } from './helpers';\n\nclass CSPANVideos {\n  CSPAN_BASE_URL: string = \"https://www.c-span.org/person/?\";\n  CSPAN_BAD_URL: string = \"https://www.c-span.org/search/?searchtype=People&query=\";\n\n\n  fetchVideoData(personName: string) {\n    const name = personName;\n\n    // if \"name\" is an error;\n    if (typeof name !== \"string\") {\n      console.error(chalk.bgRed(\"rejecting because name isn't a string\"), name)\n      return;\n    }\n\n    return this._makeRequest(name)\n      .then(this._isBadURL)\n      .then((data) => {\n        return data\n          ? this._makeSearchRequest(personName)\n          : this._makeRequest(name)\n      })\n      .then((data) => {\n\n        if ( data instanceof Error) {\n          return Promise.reject(data);\n        }\n        /**\n         * If this string is present, then we are on\n         * the intended page.\n         */\n        return data.indexOf('Recent Appearances') !== -1\n          ? this._parseRequestForData(data)\n          : this._parseSearchPageForData(data)\n      })\n      .then((data) => {\n        return typeof data === \"string\"\n          ? this._makeRequest(name, null, data)\n          : Promise.resolve(data);\n      })\n      .catch((err) => {\n        console.warn(chalk.magenta(\"There was an error, catch\", err))\n        return err;\n      })\n      \n  }\n\n  _isBadURL(dom: string): Promise<boolean> {\n    const $ = cheerio.load(dom);\n    return Promise.resolve($('body').html().indexOf(\"Page Not Found\") > -1)\n  }\n\n  /**\n   * For when the url differs from the person's name\n   * like Ted Cruz being \"rcruz.\"\n   */\n  _makeSearchRequest(personName: string): any {\n    if ( !personName ) {\n      return Promise.reject(\"Name not provided\");\n    }\n\n    return this._makeRequest(personName, true);\n  }\n\n  _makeRequest(personName: string, badURL?: boolean, newUrl?) {\n    \n    // Add try/catch?\n    if ( !personName ) {\n      return Promise.reject(new Error(\"No person name provided\"));\n    } \n\n    const name = !badURL\n    ? formatPersonName(personName)\n    : formatPersonName(personName, true)\n    \n    const base_url = newUrl \n    ? newUrl \n    : !badURL\n      ? this.CSPAN_BASE_URL + name\n      : this.CSPAN_BAD_URL + personName.replace(/\\s/,\"+\");\n\n    if (!name) {\n      return Promise.reject(name)\n    }\n\n    return new Promise((resolve, reject) => {\n      request(base_url , (err: Error, response: request.RequestResponse, body: string) => {\n        if (err) {\n          handleError(err);\n          reject(err);\n        } else {\n          resolve(body);\n        }\n      });\n    });\n  }\n  \n  _parseSearchPageForData(dom: string) {\n    const $ = cheerio.load(dom);\n    let properURL = $('section.bios > ul > li.indiv_bio > a.thumb')\n      .first()\n      .attr('href');\n\n    if ( !properURL ) {\n      return new Error(\"Bad name format provided\")\n    }\n\n    if ( _.startsWith(properURL, \"//\")) {\n      properURL = \"https:\" + properURL;\n    }\n\n    return properURL;\n  }\n\n  _parseRequestForData(dom: string) {\n    const $ = cheerio.load(dom);\n    const recentPrograms: ISingleVideo[] = [];\n    const recentProgramsHolder = $('ul.recent-programs > li');\n\n    for (var i = 0; i < recentProgramsHolder.length; i++) {\n      const singleVideo: ISingleVideo = {};\n\n      const container = recentProgramsHolder\n        .eq(i);\n\n      singleVideo.thumbnail = container\n        .find('a.thumb > img')\n        .attr(\"src\");\n\n      singleVideo.title = container\n        .find('div.text > a.title > h3')\n        .text();\n\n      singleVideo.date = container\n        .find(\"div.text > span.time > time\")\n        .text();\n\n      singleVideo.video_url = container\n        .find(\"a.thumb\")\n        .attr(\"href\");\n\n      singleVideo.embed_url = formatEmbedURL(singleVideo.video_url);\n\n      recentPrograms.push(singleVideo);\n    }\n\n    return recentPrograms;\n  }\n}\n\nfunction handleError(err: Error) {\n  console.error(\"There was an error: \", err);\n}\n\nconst cspanvids = new CSPANVideos();\nexport { cspanvids }\n\ninterface ISingleVideo {\n  thumbnail?: string,\n  title?: string,\n  date?: string,\n  embed_url?: string,\n  video_url?: string\n}\n\n/**\n * TODO: Cache request info from search page to cut down\n * on number of requests.\n */"]}